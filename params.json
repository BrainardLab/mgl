{"name":"MGL","tagline":"Mgl is a suite of mex/m files for displaying visual psychophysics stimuli and writing experimental programs in Matlab. Runs on Mac OS X (G4/5 and Intel 32 and Intel 64 bit OS Versions 10.5-10.7) Version 2.0.","body":"![MGL](http://gru.stanford.edu/lib/exe/fetch.php/mgl/mgllogo.png)\r\n\r\nFull documentation is at [http://justingardner.net/mgl](http://justingardner.net/mgl)\r\n# A quick overview\r\n\r\nmgl is a set of matlab functions for displaying full screen visual stimuli from matlab. It is based on OpenGL functions, but abstracts these into more simple functions that can be used to code various kinds of visual stimuli. It can be used on Mac OS X systems (a Windows beta exits which can open/close screen and display but is not ready for serious use and an older but usable version (1.5) exists for Linux. Neither windows nor linux versions are recommended for anyone who is not comfortable programming in C and building out existing functionality into a fully compatible version).\r\n\r\n* mgl contains a set of higher-level routines for helping you write stimulus programs which takes care of parameter randomization, timing of trials, synching with MRI scanners, collection of eye data etc.\r\n* mgl is integrated with mrTools so that you can easily extract trial timing to do analyses such as deconvolution on fMRI data collected with experiments written in mgl.\r\n* Stimuli can be displayed full screen or in a window (helpful for debugging on a system that only has one display).\r\n* With a single command that specifies the distance to and size of a monitor, the coordinate system can be specified in degrees of visual angle, thus obviating the need to explicitly convert from the natural coordinate frame of psychophysics experiments into pixels.\r\n* It can interface with the Eyelink eye tracker.\r\n* You can read and write digital signals with National Instruments digital I/O boards (see here).\r\n* You can set the gamma table for example to linearize the output of your monitor.\r\n* You can calibrate monitors automatically through serial connection to a PhotoResearch PR650, Minolta or Topcon photometer (see here).\r\n* You can display images, draw text, draw lines, dots, quads and other simple shapes.\r\n* You can get accurate keyboard and mouse event information.\r\n* You can play sounds.\r\n* You can play quicktime movies.\r\n* You can control multiple screens for example to control stereo displays.\r\n* mgl is 64-bit compliant.\r\n* mgl works with the latest versions of Mac OS X (10.6-10.8) and with the latest versions of Matlab (7.4-8.1) as of 6/19/2013. In general, we stay reasonably up to date with releases of Mac OS and Matlab. If we encounter any compatibility issues, that information will generally be posted here. If you are using an older version of Mac OS or Matlab and are having trouble getting MGL to run, you may need to recompile.\r\n* The best way to see whether it will be useful to you is to try out the mglTest programs and also the sample experiment testExperiment. A basic “hello world” program can be written in four lines:\r\n\r\n```matlab\r\n  % Open the screen, 0 specifies to draw in a window. \r\n  % 1 would be full screen in the main display\r\n  % 2 would be full screen in a secondary display, etc... \r\n  >> mglOpen(0);\r\n\r\n  % Select the coordinate frame for drawing\r\n  % (e.g. for a monitor 57 cm away, which has width and height of 16 and 12 cm). \r\n  >> mglVisualAngleCoordinates(57,[16 12]);\r\n \r\n  % Draw the text in the center (i.e. at 0,0)\r\n  >> mglTextDraw('Hello World!',[0 0]);\r\n \r\n  % The above is drawn on the back-buffer of the double-buffered display\r\n  % To make it show up you flush the display.\r\n  % This function will wait till the end of the screen refresh\r\n  >> mglFlush;\r\n  % When finished, with displaying the stimuli, you simply close the screen:\r\n\r\n>> mglClose;\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}